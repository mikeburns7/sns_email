name: 'Terraform Deploy'
# This is a basic workflow to help you get started with Actions
#https://aws.amazon.com/blogs/security/use-iam-roles-to-connect-github-actions-to-actions-in-aws/

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION : "us-east-1" #Change to reflect your Region

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read
  pull-requests: write
  
jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::792629419413:role/github_deploy #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run:
          aws sts get-caller-identity
  terraform-deploy:    # Better name than AssumeRoleAndCallIdentity
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2  # Add Terraform setup step
        
      - name: Terraform Format
        run: terraform fmt -check  # Check formatting instead of modifying
        
      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan  # Create plan file
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Only apply on main branch pushes
        run: terraform apply -auto-approve tfplan
    